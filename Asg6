package asg6;

import java.util.Scanner;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.Date;
public class asg6 {

	
	public static void main(String[] args) {
		
		
		HealthProfile patient = new HealthProfile(); //Creates object of class HP
		boolean keepGoing = false; // User input Validation
		Date dateOfBirth = null; // DOB 
		Scanner input = new Scanner(System.in);
		
	    do
	    {	
		    System.out.println("Enter Date of Birth (MM/DD/YYYY): "); //format? DD/MM/YY? MM/DD/YY?? YYYY?
		    try //user input validation
		    {                                       //should i have changed it to ddMMyyyy? 
		    	dateOfBirth = new SimpleDateFormat("mmDDyyyy").parse(input.nextLine().replaceAll("/", ""));
		        keepGoing = true; // do while cont
			    patient.setDateOfBirth(dateOfBirth.toString());
			    int year  = dateOfBirth.getYear() + 1900;
			    int month = dateOfBirth.getMonth() + 1;
			    int day   = dateOfBirth.getDay() + 1;
			    System.out.println(year);
			    System.out.println(month);
			    System.out.println(day);
			    System.exit(0);
		    } catch (Exception e) {
		        System.out.println("invalid");  
		        keepGoing = false;
		      
		    }
	    }while(!keepGoing);
	    
	    LocalDate today = LocalDate.now();           //get year Method Returns last 2 Digits of year
	    @SuppressWarnings("deprecation")//get year method
		LocalDate birthday = LocalDate.of(dateOfBirth.getYear() + 1900, dateOfBirth.getMonth() + 1, dateOfBirth.getDay() + 1);
	    								//+1 to compensate for off by one error
	    long age = ChronoUnit.YEARS.between(birthday, today);
	    patient.setAge(age);
	       
	    
		//Height
	    System.out.println("what is your height in inches: "); //set height
		int height = input.nextInt();
		do
		{
			if(height > 107 )//tallest person Ever
			{
				System.out.println("Invalid input");
				keepGoing = false;
				System.out.println("what is your height in inches: "); //set height
				height = input.nextInt();
			}
			else if(height < 0)
			{
				System.out.println("invalid input");
				keepGoing = false;
				System.out.println("what is your height in inches: "); //set height
				height = input.nextInt();
			}
			else
			{
				patient.setHeight(height);
				keepGoing = true;
			}
		}while(!keepGoing);
		
		
		//Weight
		System.out.println("what is your weight in lbs: ");
		int weight = input.nextInt();
		do
		{
			if(weight > 1400 ) // heaviest person ever
			{
				System.out.println("Invalid input");
				keepGoing = false;
				System.out.println("what is your weight in lbs: ");
				weight = input.nextInt();
			}
			else if(weight < 0) // cant be -
			{
				System.out.println("invalid input");
				keepGoing = false;
				System.out.println("what is your weight in lbs: ");
				weight = input.nextInt();
			}
			else
			{
				patient.setWeight(weight);
				keepGoing = true;
			}
		}while(!keepGoing);
		
		//math
		double bodyMassIndex = (patient.getWeight()*703)/(patient.getHeight()* patient.getHeight());
			patient.setBodyMassIndex(bodyMassIndex);
		
		int maxHeartRate = (int) (220 - patient.getAge()); // cast int to long
			patient.setMaxHeartRate(maxHeartRate);
		
		int targetHeartRate2;
		targetHeartRate2 = (int) (maxHeartRate * .85); // cast int to double to round to nearest digit
			patient.setTargetHeartRate2(targetHeartRate2);
		int targetHeartRate1;
		targetHeartRate1 = (int) (maxHeartRate * .5);
			patient.setTargetHeartRate1(targetHeartRate1);
		
		//user info output
		patient.output();
		patient.bodyMassAssesment();
		
		input.close(); // close scanner
	}// Close Main
}//Close Asg6 

class HealthProfile {
	
	private String firstName;
	private String lastName;
	private String gender; 
	//private String dateOfBirth; 
	private int dateOfBirth;
	private	int monthOfBirth;
	private int yearOfBirth;
	private int height;  
	private int weight;	
	private int targetHeartRate1;
	private int targetHeartRate2;
	private long age;
	private int maxHeartRate;
	private double bodyMassIndex;
	
	
	public int getTargetHeartRate1() 
	{
		return targetHeartRate1;
	}
	public void setTargetHeartRate1(int targetHeartRate1) 
	{
		this.targetHeartRate1 = targetHeartRate1;
	}
	public int getTargetHeartRate2() 
	{
		return targetHeartRate2;
	}
	public void setTargetHeartRate2(int targetHeartRate2) 
	{
		this.targetHeartRate2 = targetHeartRate2;
	}
	public String getFirstName() 
	{
		return firstName;
	}
	public void setFirstName(String firstName) 
	{
		this.firstName = firstName;
	}
	public String getLastName()
	{
		return lastName;
	}
	public void setLastName(String lastName) 
	{
		this.lastName = lastName;
	}
	public String getGender() 
	{
		return gender;
	}
	public void setGender(String gender) 
	{
		this.gender = gender;
	}
	public String getDateOfBirth()
	{
		return dateOfBirth;
	}
	public void setDateOfBirth(String dateOfBirth) 
	{
		this.dateOfBirth = dateOfBirth;
	}
	public int getHeight() 
	{
		return height;
	}
	public void setHeight(int height) 
	{
		this.height = height;
	}
	public int getWeight()
	{
		return weight;
	}
	public void setWeight(int weight) 
	{
		this.weight = weight;
	}
	public long getAge() 
	{
		return age;
	}
	public void setAge(long age)
	{
		this.age = age;
	}
	public double getBodyMassIndex()
	{
		return bodyMassIndex;
	}
	public void setBodyMassIndex(double bodyMassIndex) 
	{
		this.bodyMassIndex = bodyMassIndex;
	}
	public int getMaxHeartRate() 
	{
		return maxHeartRate;
	}
	public void setMaxHeartRate(int maxHeartRate) 
	{
		this.maxHeartRate = maxHeartRate;
	}
	public void bodyMassAssesment()
	{
		if (getBodyMassIndex() < 18.5 &&  getBodyMassIndex() > 0)
		{
			System.out.println("BMI Assesment: Underweight");
		}
		else if (getBodyMassIndex() >=18.5 && getBodyMassIndex() <= 24.9 )
		{	
			System.out.println("BMI Assesment: Normal");
		}
		else if (getBodyMassIndex()>=25 && getBodyMassIndex() <=29.9)
		{
			System.out.println("BMI Assesment: Overweight");
		}
		else if (getBodyMassIndex() >= 30)
		{
			System.out.println("BMI Assesment: Obese");
		}
		else 
		{
			System.out.println("system error");
			System.exit(0);
		}		
	}
	public void output()
	{
		System.out.println("\n");
		System.out.printf("Patient: %s %s - %s \n", getFirstName(), getLastName(),getGender());
		System.out.printf("Age: %s \n", getAge() + " years old");
		System.out.printf("Height: %s", getHeight() + " inches tall\n");
		System.out.printf("Weight: %s", getWeight() + "lbs \n");
		System.out.printf("Date Of Birth: %s", getDateOfBirth());
		System.out.println(" ");
		System.out.printf("Max Heart Rate: %s \n", getMaxHeartRate());
		System.out.printf("Target Heart Rate: %s - %s \n", getTargetHeartRate1() + " BPM", getTargetHeartRate2() + " BPM");
		System.out.printf("BMI: %s ", getBodyMassIndex());
		System.out.println(" ");
	}//close output
};//close class Health Profile
			 	
